// Generated by view binder compiler. Do not edit!
package vn.edu.tdc.player2024.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.tdc.player2024.R;

public final class PlayerLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnNext;

  @NonNull
  public final ImageView btnPause;

  @NonNull
  public final ImageView btnPlay;

  @NonNull
  public final ImageView btnPrev;

  @NonNull
  public final ImageView btnStop;

  @NonNull
  public final LinearLayout player;

  private PlayerLayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnNext,
      @NonNull ImageView btnPause, @NonNull ImageView btnPlay, @NonNull ImageView btnPrev,
      @NonNull ImageView btnStop, @NonNull LinearLayout player) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnPause = btnPause;
    this.btnPlay = btnPlay;
    this.btnPrev = btnPrev;
    this.btnStop = btnStop;
    this.player = player;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.player_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      ImageView btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnPause;
      ImageView btnPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPause == null) {
        break missingId;
      }

      id = R.id.btnPlay;
      ImageView btnPlay = ViewBindings.findChildViewById(rootView, id);
      if (btnPlay == null) {
        break missingId;
      }

      id = R.id.btnPrev;
      ImageView btnPrev = ViewBindings.findChildViewById(rootView, id);
      if (btnPrev == null) {
        break missingId;
      }

      id = R.id.btnStop;
      ImageView btnStop = ViewBindings.findChildViewById(rootView, id);
      if (btnStop == null) {
        break missingId;
      }

      LinearLayout player = (LinearLayout) rootView;

      return new PlayerLayoutBinding((LinearLayout) rootView, btnNext, btnPause, btnPlay, btnPrev,
          btnStop, player);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
